{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","person","delete","id","put","Person","deletePerson","name","number","onClick","Filter","props","value","search","onChange","handleSearchChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","renderPerson","map","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setPersons","setNewName","setNewNumber","setSearch","setMessage","showNotification","text","success","setTimeout","window","confirm","personService","then","filter","p","useEffect","response","data","event","target","preventDefault","samePerson","find","catch","concat","toLowerCase","includes","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7e0c005.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => (\n  axios.get(baseUrl)\n)\n\nconst create = newObject => (\n  axios.post(baseUrl, newObject)\n)\n\nconst remove = person => (\n  axios.delete(`${baseUrl}/${person.id}`)\n)\n\nconst update = person => {\n  return axios.put(`${baseUrl}/${person.id}`, person)\n}\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Person = ({ person, deletePerson }) => (\n  <div>\n    {person.name} {person.number} <button onClick={() => deletePerson(person)}>delete</button>\n  </div>\n)\n\nconst Filter = props => (\n  <form>\n    <div>filter shown with <input value={props.search} onChange={props.handleSearchChange} /></div>\n  </form>\n)\n\nconst PersonForm = props => (\n  <form onSubmit={props.addPerson}>\n    <div>name: <input value={props.newName} onChange={props.handleNameChange} /></div>\n    <div>number: <input value={props.newNumber} onChange={props.handleNumberChange} /></div>\n    <div><button type=\"submit\">add</button></div>\n  </form>\n)\n\nconst Persons = ({ persons, renderPerson }) => (\n  persons.map(renderPerson)\n)\n\nconst Notification = ({ message }) => {\n  const style = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  if (message[0] === null) {\n    return null\n  }\n\n  if (message[1]) {\n    style.color = 'green'\n  }\n\n  return (\n    <div style={style}>\n      {message[0]}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [message, setMessage] = useState([null, true])\n\n  const handleNameChange = event => setNewName(event.target.value)\n\n  const handleNumberChange = event => setNewNumber(event.target.value)\n\n  const handleSearchChange = event => setSearch(event.target.value)\n\n  const showNotification = (text, success) => {\n    setMessage([text, success])\n    setTimeout(() => setMessage([null, true]), 5000)\n  }\n\n  const addPerson = event => {\n    event.preventDefault()\n\n    const samePerson = persons.find(person => person.name === newName)\n\n    if (samePerson) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        personService\n          .update({ ...samePerson, number: newNumber })\n          .then(response => setPersons(persons.map(person => response.data.id === person.id ? response.data : person)))\n          .then(() => showNotification(`Changed number of ${newName}`, true))\n          .catch(() => showNotification(`Information of ${newName} has already been removed from server`, false))\n      }\n    } else {\n      personService\n        .create({ name: newName, number: newNumber })\n        .then(response => setPersons(persons.concat(response.data)))\n        .then(() => showNotification(`Added ${newName}`, true))\n    }\n  }\n\n  const renderPerson = person => {\n    if (person.name.toLowerCase().includes(search)) {\n      return <Person key={person.name} person={person} deletePerson={deletePerson} />\n    }\n  }\n\n  const deletePerson = person => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService\n        .remove(person)\n        .then(() => setPersons(persons.filter(p => p.id !== person.id)))\n    }\n  }\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((response) => setPersons(response.data))\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={message} />\n\n      <Filter search={search} handleSearchChange={handleSearchChange} />\n\n      <h2>add a new</h2>\n\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons persons={persons} renderPerson={renderPerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}